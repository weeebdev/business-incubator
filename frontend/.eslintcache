[{"/home/adilakhmetov/git/business-incubator/frontend/src/index.js":"1","/home/adilakhmetov/git/business-incubator/frontend/src/serviceWorker.js":"2","/home/adilakhmetov/git/business-incubator/frontend/src/components/App.js":"3","/home/adilakhmetov/git/business-incubator/frontend/src/context/UserContext.js":"4","/home/adilakhmetov/git/business-incubator/frontend/src/context/LayoutContext.js":"5","/home/adilakhmetov/git/business-incubator/frontend/src/themes/index.js":"6","/home/adilakhmetov/git/business-incubator/frontend/src/themes/default.js":"7","/home/adilakhmetov/git/business-incubator/frontend/src/components/Layout/Layout.js":"8","/home/adilakhmetov/git/business-incubator/frontend/src/pages/error/Error.js":"9","/home/adilakhmetov/git/business-incubator/frontend/src/pages/login/Login.js":"10","/home/adilakhmetov/git/business-incubator/frontend/src/pages/login/styles.js":"11","/home/adilakhmetov/git/business-incubator/frontend/src/pages/error/styles.js":"12","/home/adilakhmetov/git/business-incubator/frontend/src/components/Layout/styles.js":"13","/home/adilakhmetov/git/business-incubator/frontend/src/pages/charts/Charts.js":"14","/home/adilakhmetov/git/business-incubator/frontend/src/pages/tables/Tables.js":"15","/home/adilakhmetov/git/business-incubator/frontend/src/pages/icons/Icons.js":"16","/home/adilakhmetov/git/business-incubator/frontend/src/pages/maps/Maps.js":"17","/home/adilakhmetov/git/business-incubator/frontend/src/pages/notifications/Notifications.js":"18","/home/adilakhmetov/git/business-incubator/frontend/src/pages/typography/Typography.js":"19","/home/adilakhmetov/git/business-incubator/frontend/src/components/Sidebar/Sidebar.js":"20","/home/adilakhmetov/git/business-incubator/frontend/src/pages/dashboard/Dashboard.js":"21","/home/adilakhmetov/git/business-incubator/frontend/src/components/Header/Header.js":"22","/home/adilakhmetov/git/business-incubator/frontend/src/pages/dashboard/mock.js":"23","/home/adilakhmetov/git/business-incubator/frontend/src/pages/icons/styles.js":"24","/home/adilakhmetov/git/business-incubator/frontend/src/pages/maps/styles.js":"25","/home/adilakhmetov/git/business-incubator/frontend/src/pages/notifications/styles.js":"26","/home/adilakhmetov/git/business-incubator/frontend/src/pages/charts/components/ApexLineChart.js":"27","/home/adilakhmetov/git/business-incubator/frontend/src/pages/charts/components/ApexHeatmap.js":"28","/home/adilakhmetov/git/business-incubator/frontend/src/pages/typography/styles.js":"29","/home/adilakhmetov/git/business-incubator/frontend/src/pages/dashboard/components/Table/Table.js":"30","/home/adilakhmetov/git/business-incubator/frontend/src/components/PageTitle/PageTitle.js":"31","/home/adilakhmetov/git/business-incubator/frontend/src/components/Widget/Widget.js":"32","/home/adilakhmetov/git/business-incubator/frontend/src/components/Wrappers/Wrappers.js":"33","/home/adilakhmetov/git/business-incubator/frontend/src/components/UserAvatar/UserAvatar.js":"34","/home/adilakhmetov/git/business-incubator/frontend/src/components/Notification/Notification.js":"35","/home/adilakhmetov/git/business-incubator/frontend/src/components/Header/styles.js":"36","/home/adilakhmetov/git/business-incubator/frontend/src/pages/dashboard/styles.js":"37","/home/adilakhmetov/git/business-incubator/frontend/src/components/Sidebar/styles.js":"38","/home/adilakhmetov/git/business-incubator/frontend/src/pages/dashboard/components/BigStat/BigStat.js":"39","/home/adilakhmetov/git/business-incubator/frontend/src/components/Sidebar/components/Dot.js":"40","/home/adilakhmetov/git/business-incubator/frontend/src/components/Sidebar/components/SidebarLink/SidebarLink.js":"41","/home/adilakhmetov/git/business-incubator/frontend/src/components/PageTitle/styles.js":"42","/home/adilakhmetov/git/business-incubator/frontend/src/components/Widget/styles.js":"43","/home/adilakhmetov/git/business-incubator/frontend/src/components/UserAvatar/styles.js":"44","/home/adilakhmetov/git/business-incubator/frontend/src/components/Notification/styles.js":"45","/home/adilakhmetov/git/business-incubator/frontend/src/components/Sidebar/components/SidebarLink/styles.js":"46","/home/adilakhmetov/git/business-incubator/frontend/src/pages/dashboard/components/BigStat/styles.js":"47","/home/adilakhmetov/git/business-incubator/frontend/src/pages/poll/Poll.js":"48","/home/adilakhmetov/git/business-incubator/frontend/src/pages/poll/mock.js":"49","/home/adilakhmetov/git/business-incubator/frontend/src/pages/poll/styles.js":"50","/home/adilakhmetov/git/business-incubator/frontend/src/context/PollContext.js":"51"},{"size":974,"mtime":1638169575307,"results":"52","hashOfConfig":"53"},{"size":4948,"mtime":1638091614822,"results":"54","hashOfConfig":"53"},{"size":1748,"mtime":1638180061859,"results":"55","hashOfConfig":"53"},{"size":1977,"mtime":1638091614818,"results":"56","hashOfConfig":"53"},{"size":1392,"mtime":1638091614818,"results":"57","hashOfConfig":"53"},{"size":502,"mtime":1638091614822,"results":"58","hashOfConfig":"53"},{"size":2987,"mtime":1638091614822,"results":"59","hashOfConfig":"53"},{"size":4472,"mtime":1638094493994,"results":"60","hashOfConfig":"53"},{"size":1571,"mtime":1638091614818,"results":"61","hashOfConfig":"53"},{"size":8886,"mtime":1638091614822,"results":"62","hashOfConfig":"53"},{"size":3133,"mtime":1638091614822,"results":"63","hashOfConfig":"53"},{"size":1334,"mtime":1638091614818,"results":"64","hashOfConfig":"53"},{"size":680,"mtime":1638091614818,"results":"65","hashOfConfig":"53"},{"size":5556,"mtime":1638091614818,"results":"66","hashOfConfig":"53"},{"size":2082,"mtime":1638091614822,"results":"67","hashOfConfig":"53"},{"size":377833,"mtime":1638094786086,"results":"68","hashOfConfig":"53"},{"size":971,"mtime":1638091614822,"results":"69","hashOfConfig":"53"},{"size":13470,"mtime":1638091614822,"results":"70","hashOfConfig":"53"},{"size":4506,"mtime":1638091614822,"results":"71","hashOfConfig":"53"},{"size":4412,"mtime":1638093620962,"results":"72","hashOfConfig":"53"},{"size":15837,"mtime":1638170186059,"results":"73","hashOfConfig":"53"},{"size":10082,"mtime":1638092794130,"results":"74","hashOfConfig":"53"},{"size":4138,"mtime":1638170288391,"results":"75","hashOfConfig":"53"},{"size":780,"mtime":1638091614822,"results":"76","hashOfConfig":"53"},{"size":171,"mtime":1638091614822,"results":"77","hashOfConfig":"53"},{"size":1858,"mtime":1638091614822,"results":"78","hashOfConfig":"53"},{"size":1328,"mtime":1638091614818,"results":"79","hashOfConfig":"53"},{"size":1794,"mtime":1638091614818,"results":"80","hashOfConfig":"53"},{"size":374,"mtime":1638091614822,"results":"81","hashOfConfig":"53"},{"size":1274,"mtime":1638091614818,"results":"82","hashOfConfig":"53"},{"size":427,"mtime":1638091614818,"results":"83","hashOfConfig":"53"},{"size":2485,"mtime":1638091614818,"results":"84","hashOfConfig":"53"},{"size":3790,"mtime":1638091614818,"results":"85","hashOfConfig":"53"},{"size":593,"mtime":1638091614818,"results":"86","hashOfConfig":"53"},{"size":3296,"mtime":1638091614818,"results":"87","hashOfConfig":"53"},{"size":3868,"mtime":1638091614818,"results":"88","hashOfConfig":"53"},{"size":2870,"mtime":1638091614818,"results":"89","hashOfConfig":"53"},{"size":1304,"mtime":1638091614818,"results":"90","hashOfConfig":"53"},{"size":4039,"mtime":1638091614818,"results":"91","hashOfConfig":"53"},{"size":862,"mtime":1638091614818,"results":"92","hashOfConfig":"53"},{"size":4411,"mtime":1638091614818,"results":"93","hashOfConfig":"53"},{"size":462,"mtime":1638091614818,"results":"94","hashOfConfig":"53"},{"size":969,"mtime":1638091614818,"results":"95","hashOfConfig":"53"},{"size":276,"mtime":1638091614818,"results":"96","hashOfConfig":"53"},{"size":993,"mtime":1638091614818,"results":"97","hashOfConfig":"53"},{"size":1412,"mtime":1638091614818,"results":"98","hashOfConfig":"53"},{"size":1027,"mtime":1638091614818,"results":"99","hashOfConfig":"53"},{"size":2137,"mtime":1638169750787,"results":"100","hashOfConfig":"53"},{"size":227,"mtime":1638101148378,"results":"101","hashOfConfig":"53"},{"size":93,"mtime":1638094301490,"results":"102","hashOfConfig":"53"},{"size":1482,"mtime":1638169363523,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"r1xxuh",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"106"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"106"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"106"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"106"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"/home/adilakhmetov/git/business-incubator/frontend/src/index.js",[],["213","214"],"/home/adilakhmetov/git/business-incubator/frontend/src/serviceWorker.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/components/App.js",["215"],"/home/adilakhmetov/git/business-incubator/frontend/src/context/UserContext.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/context/LayoutContext.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/themes/index.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/themes/default.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/components/Layout/Layout.js",["216","217","218","219","220","221","222"],"import React from \"react\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport { Box, IconButton, Link } from \"@material-ui/core\";\nimport Icon from \"@mdi/react\";\n\n//icons\nimport {\n  mdiFacebook as FacebookIcon,\n  mdiTwitter as TwitterIcon,\n  mdiGithub as GithubIcon,\n} from \"@mdi/js\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Header from \"../Header\";\nimport Sidebar from \"../Sidebar\";\n\n// pages\nimport Dashboard from \"../../pages/dashboard\";\nimport Typography from \"../../pages/typography\";\nimport Notifications from \"../../pages/notifications\";\nimport Maps from \"../../pages/maps\";\nimport Tables from \"../../pages/tables\";\nimport Icons from \"../../pages/icons\";\nimport Charts from \"../../pages/charts\";\nimport Poll from \"../../pages/poll\";\n\n// context\nimport { useLayoutState } from \"../../context/LayoutContext\";\n\nfunction Layout(props) {\n  var classes = useStyles();\n\n  // global\n  var layoutState = useLayoutState();\n\n  return (\n    <div className={classes.root}>\n      <>\n        <Header history={props.history} />\n        <Sidebar />\n        <div\n          className={classnames(classes.content, {\n            [classes.contentShift]: layoutState.isSidebarOpened,\n          })}\n        >\n          <div className={classes.fakeToolbar} />\n          <Switch>\n            <Route path=\"/app/dashboard\" component={Dashboard} />\n            <Route path=\"/app/typography\" component={Typography} />\n            <Route path=\"/app/tables\" component={Tables} />\n            <Route path=\"/app/notifications\" component={Notifications} />\n            <Route\n              exact\n              path=\"/app/ui\"\n              render={() => <Redirect to=\"/app/ui/icons\" />}\n            />\n            <Route path=\"/app/ui/maps\" component={Maps} />\n            <Route path=\"/app/ui/icons\" component={Icons} />\n            <Route path=\"/app/ui/charts\" component={Charts} />\n            <Route path=\"/app/poll\" component={Poll} />\n          </Switch>\n          {/* <Box\n              mt={5}\n              width={\"100%\"}\n              display={\"flex\"}\n              alignItems={\"center\"}\n              justifyContent=\"space-between\"\n            >\n              <div>\n                <Link\n                  color={'primary'}\n                  href={'https://flatlogic.com/'}\n                  target={'_blank'}\n                  className={classes.link}\n                >\n                  Flatlogic\n                </Link>\n                <Link\n                  color={'primary'}\n                  href={'https://flatlogic.com/about'}\n                  target={'_blank'}\n                  className={classes.link}\n                >\n                  About Us\n                </Link>\n                <Link\n                  color={'primary'}\n                  href={'https://flatlogic.com/blog'}\n                  target={'_blank'}\n                  className={classes.link}\n                >\n                  Blog\n                </Link>\n              </div>\n              <div>\n                <Link\n                  href={'https://www.facebook.com/flatlogic'}\n                  target={'_blank'}\n                >\n                  <IconButton aria-label=\"facebook\">\n                    <Icon\n                      path={FacebookIcon}\n                      size={1}\n                      color=\"#6E6E6E99\"\n                    />\n                  </IconButton>\n                </Link>\n                <Link\n                  href={'https://twitter.com/flatlogic'}\n                  target={'_blank'}\n                >\n                  <IconButton aria-label=\"twitter\">\n                    <Icon\n                      path={TwitterIcon}\n                      size={1}\n                      color=\"#6E6E6E99\"\n                    />\n                  </IconButton>\n                </Link>\n                <Link\n                  href={'https://github.com/flatlogic'}\n                  target={'_blank'}\n                >\n                  <IconButton\n                    aria-label=\"github\"\n                    style={{marginRight: -12}}\n                  >\n                    <Icon\n                      path={GithubIcon}\n                      size={1}\n                      color=\"#6E6E6E99\"\n                    />\n                  </IconButton>\n                </Link>\n              </div>\n            </Box> */}\n        </div>\n      </>\n    </div>\n  );\n}\n\nexport default withRouter(Layout);\n","/home/adilakhmetov/git/business-incubator/frontend/src/pages/error/Error.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/pages/login/Login.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/pages/login/styles.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/pages/error/styles.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/components/Layout/styles.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/pages/charts/Charts.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/pages/tables/Tables.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/pages/icons/Icons.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/pages/maps/Maps.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/pages/notifications/Notifications.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/pages/typography/Typography.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/components/Sidebar/Sidebar.js",["223","224","225","226"],"import React, { useState, useEffect } from \"react\";\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\nimport {\n  Home as HomeIcon,\n  NotificationsNone as NotificationsIcon,\n  FormatSize as TypographyIcon,\n  FilterNone as UIElementsIcon,\n  BorderAll as TableIcon,\n  QuestionAnswer as SupportIcon,\n  LibraryBooks as LibraryIcon,\n  HelpOutline as FAQIcon,\n  ArrowBack as ArrowBackIcon,\n  Poll,\n} from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\nimport Dot from \"./components/Dot\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\n\nconst structure = [\n  { id: 0, label: \"Dashboard\", link: \"/app/dashboard\", icon: <HomeIcon /> },\n  {\n    id: 1,\n    label: \"Typography\",\n    link: \"/app/typography\",\n    icon: <TypographyIcon />,\n  },\n  { id: 2, label: \"Tables\", link: \"/app/tables\", icon: <TableIcon /> },\n  {\n    id: 3,\n    label: \"Notifications\",\n    link: \"/app/notifications\",\n    icon: <NotificationsIcon />,\n  },\n  {\n    id: 4,\n    label: \"UI Elements\",\n    link: \"/app/ui\",\n    icon: <UIElementsIcon />,\n    children: [\n      { label: \"Icons\", link: \"/app/ui/icons\" },\n      { label: \"Charts\", link: \"/app/ui/charts\" },\n      { label: \"Maps\", link: \"/app/ui/maps\" },\n    ],\n  },\n  {\n    id: 5,\n    label: \"Poll\",\n    link: \"/app/poll\",\n    icon: <Poll />,\n  },\n  // { id: 5, type: \"divider\" },\n  // { id: 6, type: \"title\", label: \"HELP\" },\n  // { id: 7, label: \"Library\", link: \"https://flatlogic.com/templates\", icon: <LibraryIcon /> },\n  // { id: 8, label: \"Support\", link: \"https://flatlogic.com/forum\", icon: <SupportIcon /> },\n  // { id: 9, label: \"FAQ\", link: \"https://flatlogic.com/forum\", icon: <FAQIcon /> },\n  // { id: 10, type: \"divider\" },\n  // { id: 11, type: \"title\", label: \"PROJECTS\" },\n  // {\n  //   id: 12,\n  //   label: \"My recent\",\n  //   link: \"\",\n  //   icon: <Dot size=\"small\" color=\"warning\" />,\n  // },\n  // {\n  //   id: 13,\n  //   label: \"Starred\",\n  //   link: \"\",\n  //   icon: <Dot size=\"small\" color=\"primary\" />,\n  // },\n  // {\n  //   id: 14,\n  //   label: \"Background\",\n  //   link: \"\",\n  //   icon: <Dot size=\"small\" color=\"secondary\" />,\n  // },\n];\n\nfunction Sidebar({ location }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // global\n  var { isSidebarOpened } = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n\n  // local\n  var [isPermanent, setPermanent] = useState(true);\n\n  useEffect(function () {\n    window.addEventListener(\"resize\", handleWindowWidthChange);\n    handleWindowWidthChange();\n    return function cleanup() {\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\n    };\n  });\n\n  return (\n    <Drawer\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\n      className={classNames(classes.drawer, {\n        [classes.drawerOpen]: isSidebarOpened,\n        [classes.drawerClose]: !isSidebarOpened,\n      })}\n      classes={{\n        paper: classNames({\n          [classes.drawerOpen]: isSidebarOpened,\n          [classes.drawerClose]: !isSidebarOpened,\n        }),\n      }}\n      open={isSidebarOpened}\n    >\n      <div className={classes.toolbar} />\n      <div className={classes.mobileBackButton}>\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\n          <ArrowBackIcon\n            classes={{\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\n            }}\n          />\n        </IconButton>\n      </div>\n      <List className={classes.sidebarList}>\n        {structure.map((link) => (\n          <SidebarLink\n            key={link.id}\n            location={location}\n            isSidebarOpened={isSidebarOpened}\n            {...link}\n          />\n        ))}\n      </List>\n    </Drawer>\n  );\n\n  // ##################################################################\n  function handleWindowWidthChange() {\n    var windowWidth = window.innerWidth;\n    var breakpointWidth = theme.breakpoints.values.md;\n    var isSmallScreen = windowWidth < breakpointWidth;\n\n    if (isSmallScreen && isPermanent) {\n      setPermanent(false);\n    } else if (!isSmallScreen && !isPermanent) {\n      setPermanent(true);\n    }\n  }\n}\n\nexport default withRouter(Sidebar);\n","/home/adilakhmetov/git/business-incubator/frontend/src/pages/dashboard/Dashboard.js",["227"],"import React, { useState } from \"react\";\nimport {\n  Grid,\n  LinearProgress,\n  Select,\n  OutlinedInput,\n  MenuItem,\n  Button,\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  AreaChart,\n  LineChart,\n  Line,\n  Area,\n  PieChart,\n  Pie,\n  Cell,\n  YAxis,\n  XAxis,\n} from \"recharts\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget\";\nimport PageTitle from \"../../components/PageTitle\";\nimport { Typography } from \"../../components/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport Table from \"./components/Table/Table\";\nimport BigStat from \"./components/BigStat/BigStat\";\n\nconst mainChartData = getMainChartData();\nconst PieChartData = [\n  { name: \"Group A\", value: 400, color: \"primary\" },\n  { name: \"Group B\", value: 300, color: \"secondary\" },\n  { name: \"Group C\", value: 300, color: \"warning\" },\n  { name: \"Group D\", value: 200, color: \"success\" },\n];\n\nexport default function Dashboard(props) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // local\n  var [mainChartState, setMainChartState] = useState(\"monthly\");\n\n  return (\n    <>\n      <PageTitle\n        title=\"Dashboard\"\n        button={\n          <Button variant=\"contained\" size=\"medium\" color=\"secondary\">\n            Latest Reports\n          </Button>\n        }\n      />\n      <Grid container spacing={4}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget\n            title=\"Visits Today\"\n            upperTitle\n            bodyClass={classes.fullHeightBody}\n            className={classes.card}\n          >\n            <div className={classes.visitsNumberContainer}>\n              <Grid container item alignItems={\"center\"}>\n                <Grid item xs={6}>\n                  <Typography size=\"xl\" weight=\"medium\" noWrap>\n                    12, 678\n                  </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <LineChart\n                    width={100}\n                    height={30}\n                    data={[\n                      { value: 10 },\n                      { value: 15 },\n                      { value: 10 },\n                      { value: 17 },\n                      { value: 18 },\n                    ]}\n                  >\n                    <Line\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.success.main}\n                      strokeWidth={2}\n                      dot={false}\n                    />\n                  </LineChart>\n                </Grid>\n              </Grid>\n            </div>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Grid item xs={4}>\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\n                  Registrations\n                </Typography>\n                <Typography size=\"md\">860</Typography>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\n                  Sign Out\n                </Typography>\n                <Typography size=\"md\">32</Typography>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\n                  Rate\n                </Typography>\n                <Typography size=\"md\">3.25%</Typography>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={8} sm={6} xs={12}>\n          <Widget\n            title=\"App Performance\"\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n          >\n            <div className={classes.performanceLegendWrapper}>\n              <div className={classes.legendElement}>\n                <Dot color=\"warning\" />\n                <Typography\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.legendElementText}\n                >\n                  Integration\n                </Typography>\n              </div>\n              <div className={classes.legendElement}>\n                <Dot color=\"primary\" />\n                <Typography\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.legendElementText}\n                >\n                  SDK\n                </Typography>\n              </div>\n            </div>\n            <div className={classes.progressSection}>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                Integration\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={77}\n                classes={{ barColorPrimary: classes.progressBarPrimary }}\n                className={classes.progress}\n              />\n            </div>\n            <div>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                SDK\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={73}\n                classes={{ barColorPrimary: classes.progressBarWarning }}\n                className={classes.progress}\n              />\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={8} sm={6} xs={12}>\n          <Widget\n            title=\"Server Overview\"\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n          >\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n                noWrap\n              >\n                60% / 37°С / 3.3 Ghz\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.secondary.main}\n                      fill={theme.palette.secondary.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n                noWrap\n              >\n                54% / 31°С / 3.3 Ghz\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.primary.main}\n                      fill={theme.palette.primary.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n                noWrap\n              >\n                57% / 21°С / 3.3 Ghz\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.warning.main}\n                      fill={theme.palette.warning.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget title=\"Revenue Breakdown\" upperTitle className={classes.card}>\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <ResponsiveContainer width=\"100%\" height={144}>\n                  <PieChart>\n                    <Pie\n                      data={PieChartData}\n                      innerRadius={30}\n                      outerRadius={40}\n                      dataKey=\"value\"\n                    >\n                      {PieChartData.map((entry, index) => (\n                        <Cell\n                          key={`cell-${index}`}\n                          fill={theme.palette[entry.color].main}\n                        />\n                      ))}\n                    </Pie>\n                  </PieChart>\n                </ResponsiveContainer>\n              </Grid>\n              <Grid item xs={6}>\n                <div className={classes.pieChartLegendWrapper}>\n                  {PieChartData.map(({ name, value, color }, index) => (\n                    <div key={color} className={classes.legendItemContainer}>\n                      <Dot color={color} />\n                      <Typography\n                        style={{ whiteSpace: \"nowrap\", fontSize: 12 }}\n                      >\n                        &nbsp;{name}&nbsp;\n                      </Typography>\n                      <Typography color=\"text\" colorBrightness=\"secondary\">\n                        &nbsp;{value}\n                      </Typography>\n                    </div>\n                  ))}\n                </div>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n        <Grid item xs={12}>\n          <Widget\n            bodyClass={classes.mainChartBody}\n            header={\n              <div className={classes.mainChartHeader}>\n                <Typography\n                  variant=\"h5\"\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                >\n                  Daily Line Chart\n                </Typography>\n                <div className={classes.mainChartHeaderLabels}>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"warning\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Tablet\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"primary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Mobile\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"secondary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Desktop\n                    </Typography>\n                  </div>\n                </div>\n                <Select\n                  value={mainChartState}\n                  onChange={(e) => setMainChartState(e.target.value)}\n                  input={\n                    <OutlinedInput\n                      labelWidth={0}\n                      classes={{\n                        notchedOutline: classes.mainChartSelectRoot,\n                        input: classes.mainChartSelect,\n                      }}\n                    />\n                  }\n                  autoWidth\n                >\n                  <MenuItem value=\"daily\">Daily</MenuItem>\n                  <MenuItem value=\"weekly\">Weekly</MenuItem>\n                  <MenuItem value=\"monthly\">Monthly</MenuItem>\n                </Select>\n              </div>\n            }\n          >\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\n              <ComposedChart\n                margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\n                data={mainChartData}\n              >\n                <YAxis\n                  ticks={[0, 2500, 5000, 7500]}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                  tickLine={false}\n                />\n                <XAxis\n                  tickFormatter={(i) => i + 1}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                  tickLine={false}\n                />\n                <Area\n                  type=\"natural\"\n                  dataKey=\"desktop\"\n                  fill={theme.palette.background.light}\n                  strokeWidth={0}\n                  activeDot={false}\n                />\n                <Line\n                  type=\"natural\"\n                  dataKey=\"mobile\"\n                  stroke={theme.palette.primary.main}\n                  strokeWidth={2}\n                  dot={false}\n                  activeDot={false}\n                />\n                <Line\n                  type=\"linear\"\n                  dataKey=\"tablet\"\n                  stroke={theme.palette.warning.main}\n                  strokeWidth={2}\n                  dot={{\n                    stroke: theme.palette.warning.dark,\n                    strokeWidth: 2,\n                    fill: theme.palette.warning.main,\n                  }}\n                />\n              </ComposedChart>\n            </ResponsiveContainer>\n          </Widget>\n        </Grid>\n        {mock.bigStat.map((stat) => (\n          <Grid item md={4} sm={6} xs={12} key={stat.product}>\n            <BigStat {...stat} />\n          </Grid>\n        ))}\n        {/* <Grid item xs={12}>\n          <Widget\n            title=\"Support Requests\"\n            upperTitle\n            noBodyPadding\n            bodyClass={classes.tableWidget}\n          >\n            <Table data={mock.table} />\n          </Widget>\n        </Grid> */}\n      </Grid>\n    </>\n  );\n}\n\n// #######################################################################\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  var array = new Array(length).fill();\n  let lastValue;\n\n  return array.map((item, index) => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (\n      randomValue <= min ||\n      randomValue >= max ||\n      (lastValue && randomValue - lastValue > maxDiff)\n    ) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n\n    return { value: randomValue };\n  });\n}\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\n\n  for (let i = 0; i < tablet.length; i++) {\n    resultArray.push({\n      tablet: tablet[i].value,\n      desktop: desktop[i].value,\n      mobile: mobile[i].value,\n    });\n  }\n\n  return resultArray;\n}\n","/home/adilakhmetov/git/business-incubator/frontend/src/components/Header/Header.js",["228","229","230","231","232","233","234"],"import React, { useState } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  InputBase,\n  Menu,\n  MenuItem,\n  Fab,\n  Link,\n} from \"@material-ui/core\";\nimport {\n  Menu as MenuIcon,\n  MailOutline as MailIcon,\n  NotificationsNone as NotificationsIcon,\n  Person as AccountIcon,\n  Search as SearchIcon,\n  Send as SendIcon,\n  ArrowBack as ArrowBackIcon,\n} from \"@material-ui/icons\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Badge, Typography, Button } from \"../Wrappers\";\nimport Notification from \"../Notification/Notification\";\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\n\nconst messages = [\n  // {\n  //   id: 0,\n  //   variant: \"warning\",\n  //   name: \"Jane Hew\",\n  //   message: \"Hey! How is it going?\",\n  //   time: \"9:32\",\n  // },\n  // {\n  //   id: 1,\n  //   variant: \"success\",\n  //   name: \"Lloyd Brown\",\n  //   message: \"Check out my new Dashboard\",\n  //   time: \"9:18\",\n  // },\n  // {\n  //   id: 2,\n  //   variant: \"primary\",\n  //   name: \"Mark Winstein\",\n  //   message: \"I want rearrange the appointment\",\n  //   time: \"9:15\",\n  // },\n  // {\n  //   id: 3,\n  //   variant: \"secondary\",\n  //   name: \"Liana Dutti\",\n  //   message: \"Good news from sale department\",\n  //   time: \"9:09\",\n  // },\n];\n\nconst notifications = [\n  // { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\n  // {\n  //   id: 1,\n  //   color: \"success\",\n  //   type: \"info\",\n  //   message: \"What is the best way to get ...\",\n  // },\n  // {\n  //   id: 2,\n  //   color: \"secondary\",\n  //   type: \"notification\",\n  //   message: \"This is just a simple notification\",\n  // },\n  // {\n  //   id: 3,\n  //   color: \"primary\",\n  //   type: \"e-commerce\",\n  //   message: \"12 new orders has arrived today\",\n  // },\n];\n\nexport default function Header(props) {\n  var classes = useStyles();\n\n  // global\n  var layoutState = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [mailMenu, setMailMenu] = useState(null);\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\n  var [profileMenu, setProfileMenu] = useState(null);\n  var [isSearchOpen, setSearchOpen] = useState(false);\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          color=\"inherit\"\n          onClick={() => toggleSidebar(layoutDispatch)}\n          className={classNames(\n            classes.headerMenuButtonSandwich,\n            classes.headerMenuButtonCollapse,\n          )}\n        >\n          {layoutState.isSidebarOpened ? (\n            <ArrowBackIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          ) : (\n            <MenuIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          )}\n        </IconButton>\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\n          Monitoring System of BI functioning\n        </Typography>\n        <div className={classes.grow} />\n        <div\n          className={classNames(classes.search, {\n            [classes.searchFocused]: isSearchOpen,\n          })}\n        >\n          <div\n            className={classNames(classes.searchIcon, {\n              [classes.searchIconOpened]: isSearchOpen,\n            })}\n            onClick={() => setSearchOpen(!isSearchOpen)}\n          >\n            <SearchIcon classes={{ root: classes.headerIcon }} />\n          </div>\n          <InputBase\n            placeholder=\"Search…\"\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput,\n            }}\n          />\n        </div>\n        <IconButton\n          color=\"inherit\"\n          aria-haspopup=\"true\"\n          aria-controls=\"mail-menu\"\n          onClick={(e) => {\n            setNotificationsMenu(e.currentTarget);\n            setIsNotificationsUnread(false);\n          }}\n          className={classes.headerMenuButton}\n        >\n          <Badge\n            badgeContent={isNotificationsUnread ? notifications.length : null}\n            color=\"warning\"\n          >\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\n          </Badge>\n        </IconButton>\n        <IconButton\n          color=\"inherit\"\n          aria-haspopup=\"true\"\n          aria-controls=\"mail-menu\"\n          onClick={(e) => {\n            setMailMenu(e.currentTarget);\n            setIsMailsUnread(false);\n          }}\n          className={classes.headerMenuButton}\n        >\n          <Badge\n            badgeContent={isMailsUnread ? messages.length : null}\n            color=\"secondary\"\n          >\n            <MailIcon classes={{ root: classes.headerIcon }} />\n          </Badge>\n        </IconButton>\n        {/* <IconButton\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n          className={classes.headerMenuButton}\n          aria-controls=\"profile-menu\"\n          onClick={(e) => setProfileMenu(e.currentTarget)}\n        >\n          <AccountIcon classes={{ root: classes.headerIcon }} />\n        </IconButton> */}\n        <Menu\n          id=\"mail-menu\"\n          open={Boolean(mailMenu)}\n          anchorEl={mailMenu}\n          onClose={() => setMailMenu(null)}\n          MenuListProps={{ className: classes.headerMenuList }}\n          className={classes.headerMenu}\n          classes={{ paper: classes.profileMenu }}\n          disableAutoFocusItem\n        >\n          <div className={classes.profileMenuUser}>\n            <Typography variant=\"h4\" weight=\"medium\">\n              New Messages\n            </Typography>\n            <Typography\n              className={classes.profileMenuLink}\n              component=\"a\"\n              color=\"secondary\"\n            >\n              {messages.length} New Messages\n            </Typography>\n          </div>\n          {messages.map((message) => (\n            <MenuItem key={message.id} className={classes.messageNotification}>\n              <div className={classes.messageNotificationSide}>\n                <UserAvatar color={message.variant} name={message.name} />\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\n                  {message.time}\n                </Typography>\n              </div>\n              <div\n                className={classNames(\n                  classes.messageNotificationSide,\n                  classes.messageNotificationBodySide,\n                )}\n              >\n                <Typography weight=\"medium\" gutterBottom>\n                  {message.name}\n                </Typography>\n                <Typography color=\"text\" colorBrightness=\"secondary\">\n                  {message.message}\n                </Typography>\n              </div>\n            </MenuItem>\n          ))}\n          <Fab\n            variant=\"extended\"\n            color=\"primary\"\n            aria-label=\"Add\"\n            className={classes.sendMessageButton}\n          >\n            Send New Message\n            <SendIcon className={classes.sendButtonIcon} />\n          </Fab>\n        </Menu>\n        <Menu\n          id=\"notifications-menu\"\n          open={Boolean(notificationsMenu)}\n          anchorEl={notificationsMenu}\n          onClose={() => setNotificationsMenu(null)}\n          className={classes.headerMenu}\n          disableAutoFocusItem\n        >\n          {notifications.map((notification) => (\n            <MenuItem\n              key={notification.id}\n              onClick={() => setNotificationsMenu(null)}\n              className={classes.headerMenuItem}\n            >\n              <Notification {...notification} typographyVariant=\"inherit\" />\n            </MenuItem>\n          ))}\n        </Menu>\n        {/* <Menu\n          id=\"profile-menu\"\n          open={Boolean(profileMenu)}\n          anchorEl={profileMenu}\n          onClose={() => setProfileMenu(null)}\n          className={classes.headerMenu}\n          classes={{ paper: classes.profileMenu }}\n          disableAutoFocusItem\n        >\n          <div className={classes.profileMenuUser}>\n            <Typography variant=\"h4\" weight=\"medium\">\n              John Smith\n            </Typography>\n            <Typography\n              className={classes.profileMenuLink}\n              component=\"a\"\n              color=\"primary\"\n              href=\"https://flatlogic.com\"\n            >\n              Flalogic.com\n            </Typography>\n          </div>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\n          </MenuItem>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\n          </MenuItem>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\n          </MenuItem>\n          <div className={classes.profileMenuUser}>\n            <Typography\n              className={classes.profileMenuLink}\n              color=\"primary\"\n              onClick={() => signOut(userDispatch, props.history)}\n            >\n              Sign Out\n            </Typography>\n          </div>\n        </Menu> */}\n      </Toolbar>\n    </AppBar>\n  );\n}\n","/home/adilakhmetov/git/business-incubator/frontend/src/pages/dashboard/mock.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/pages/icons/styles.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/pages/maps/styles.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/pages/notifications/styles.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/pages/charts/components/ApexLineChart.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/pages/charts/components/ApexHeatmap.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/pages/typography/styles.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/pages/dashboard/components/Table/Table.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/components/PageTitle/PageTitle.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/components/Widget/Widget.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/components/Wrappers/Wrappers.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/components/UserAvatar/UserAvatar.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/components/Notification/Notification.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/components/Header/styles.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/pages/dashboard/styles.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/components/Sidebar/styles.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/pages/dashboard/components/BigStat/BigStat.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/components/Sidebar/components/Dot.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/components/Sidebar/components/SidebarLink/SidebarLink.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/components/PageTitle/styles.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/components/Widget/styles.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/components/UserAvatar/styles.js",[],["235","236"],"/home/adilakhmetov/git/business-incubator/frontend/src/components/Notification/styles.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/components/Sidebar/components/SidebarLink/styles.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/pages/dashboard/components/BigStat/styles.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/pages/poll/Poll.js",["237"],"import React from \"react\";\nimport { JsonForms } from \"@jsonforms/react\";\nimport {\n  materialRenderers,\n  materialCells,\n} from \"@jsonforms/material-renderers\";\n\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport Widget from \"../../components/Widget\";\n\n// material\nimport { Button, Grid } from \"@material-ui/core\";\n\n// mocks\nimport { countries, bis } from \"./mock\";\nimport {\n  usePollState,\n  usePollDispatch,\n  setData,\n  setErrors,\n} from \"../../context/PollContext\";\n\nconst customSchema = {\n  type: \"object\",\n  properties: {\n    country: {\n      type: \"string\",\n      enum: countries.map((country) => country.name),\n    },\n    bi: {\n      type: \"string\",\n      enum: bis.map((bi) => bi.name),\n    },\n    projects: {\n      type: \"array\",\n      items: {\n        type: \"object\",\n        properties: {\n          year: {\n            type: \"integer\",\n          },\n          number: {\n            type: \"integer\",\n          },\n          sum: {\n            type: \"integer\",\n          },\n        },\n        required: [\"year\", \"number\", \"sum\"],\n      },\n    },\n  },\n  required: [\"country\", \"bi\", \"projects\"],\n};\n\nexport default function Poll(props) {\n  const { data, errors } = usePollState();\n  const dispatch = usePollDispatch();\n\n  return (\n    <>\n      <PageTitle\n        title=\"Poll\"\n        button={\n          <Button\n            variant=\"contained\"\n            size=\"medium\"\n            color=\"secondary\"\n            disabled={Boolean(errors?.length)}\n          >\n            Report\n          </Button>\n        }\n      />\n      <Grid container spacing={4}>\n        <Grid item xs={10}>\n          <Widget title=\"Fill the fields\" disableWidgetMenu>\n            <JsonForms\n              schema={customSchema}\n              //   uischema={uischema}\n              data={data}\n              renderers={materialRenderers}\n              cells={materialCells}\n              onChange={({ data, errors }) => [\n                setData(dispatch, data),\n                setErrors(dispatch, errors),\n              ]}\n            />\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","/home/adilakhmetov/git/business-incubator/frontend/src/pages/poll/mock.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/pages/poll/styles.js",[],"/home/adilakhmetov/git/business-incubator/frontend/src/context/PollContext.js",[],{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","severity":1,"message":"243","line":12,"column":10,"nodeType":"244","messageId":"245","endLine":12,"endColumn":22},{"ruleId":"242","severity":1,"message":"246","line":4,"column":10,"nodeType":"244","messageId":"245","endLine":4,"endColumn":13},{"ruleId":"242","severity":1,"message":"247","line":4,"column":15,"nodeType":"244","messageId":"245","endLine":4,"endColumn":25},{"ruleId":"242","severity":1,"message":"248","line":4,"column":27,"nodeType":"244","messageId":"245","endLine":4,"endColumn":31},{"ruleId":"242","severity":1,"message":"249","line":5,"column":8,"nodeType":"244","messageId":"245","endLine":5,"endColumn":12},{"ruleId":"242","severity":1,"message":"250","line":9,"column":18,"nodeType":"244","messageId":"245","endLine":9,"endColumn":30},{"ruleId":"242","severity":1,"message":"251","line":10,"column":17,"nodeType":"244","messageId":"245","endLine":10,"endColumn":28},{"ruleId":"242","severity":1,"message":"252","line":11,"column":16,"nodeType":"244","messageId":"245","endLine":11,"endColumn":26},{"ruleId":"242","severity":1,"message":"253","line":9,"column":21,"nodeType":"244","messageId":"245","endLine":9,"endColumn":32},{"ruleId":"242","severity":1,"message":"254","line":10,"column":19,"nodeType":"244","messageId":"245","endLine":10,"endColumn":30},{"ruleId":"242","severity":1,"message":"255","line":11,"column":18,"nodeType":"244","messageId":"245","endLine":11,"endColumn":25},{"ruleId":"242","severity":1,"message":"256","line":24,"column":8,"nodeType":"244","messageId":"245","endLine":24,"endColumn":11},{"ruleId":"242","severity":1,"message":"257","line":34,"column":8,"nodeType":"244","messageId":"245","endLine":34,"endColumn":13},{"ruleId":"242","severity":1,"message":"248","line":10,"column":3,"nodeType":"244","messageId":"245","endLine":10,"endColumn":7},{"ruleId":"242","severity":1,"message":"258","line":16,"column":13,"nodeType":"244","messageId":"245","endLine":16,"endColumn":24},{"ruleId":"242","severity":1,"message":"259","line":27,"column":29,"nodeType":"244","messageId":"245","endLine":27,"endColumn":35},{"ruleId":"242","severity":1,"message":"260","line":37,"column":27,"nodeType":"244","messageId":"245","endLine":37,"endColumn":34},{"ruleId":"242","severity":1,"message":"261","line":98,"column":7,"nodeType":"244","messageId":"245","endLine":98,"endColumn":19},{"ruleId":"242","severity":1,"message":"262","line":105,"column":8,"nodeType":"244","messageId":"245","endLine":105,"endColumn":19},{"ruleId":"242","severity":1,"message":"263","line":105,"column":21,"nodeType":"244","messageId":"245","endLine":105,"endColumn":35},{"ruleId":"238","replacedBy":"264"},{"ruleId":"240","replacedBy":"265"},{"ruleId":"242","severity":1,"message":"266","line":8,"column":8,"nodeType":"244","messageId":"245","endLine":8,"endColumn":17},"no-native-reassign",["267"],"no-negated-in-lhs",["268"],"no-unused-vars","'useUserState' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.","'IconButton' is defined but never used.","'Link' is defined but never used.","'Icon' is defined but never used.","'FacebookIcon' is defined but never used.","'TwitterIcon' is defined but never used.","'GithubIcon' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'Dot' is defined but never used.","'Table' is defined but never used.","'AccountIcon' is defined but never used.","'Button' is defined but never used.","'signOut' is defined but never used.","'userDispatch' is assigned a value but never used.","'profileMenu' is assigned a value but never used.","'setProfileMenu' is assigned a value but never used.",["267"],["268"],"'useStyles' is defined but never used.","no-global-assign","no-unsafe-negation"]